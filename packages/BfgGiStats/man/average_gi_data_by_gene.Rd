% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/group_gis.R
\name{average_gi_data_by_gene}
\alias{average_gi_data_by_gene}
\title{Combine data from multiple barcodes for each gene}
\usage{
average_gi_data_by_gene(gi_data, type_column_grep = "Type_of_gene",
  gi_column_grep = "^GIS", gi_err_column_grep = "^SE_GIS",
  fdr_column_grep = "^P.neutral", z_column_grep = "^Z_GIS",
  w_x_column_grep = "^W_x\\\\.", w_x_err_column_grep = "^W_x_SE\\\\.",
  w_y_column_grep = "^W_y\\\\.", w_y_err_column_grep = "^W_y_SE\\\\.",
  w_xy_column_grep = "^W_xy\\\\.", w_xy_err_column_grep = "^W_xy_SE\\\\.",
  count_column_grep = "^C_xy")
}
\arguments{
\item{gi_data}{barcode-wise genetic interaction data}

\item{type_column_grep}{regex to find 'Type of gene' columns}

\item{gi_column_grep}{regex to fid GIS columns}

\item{gi_err_column_grep}{regex to find GIS error columns}

\item{z_column_grep}{regex to find Z_GIS and Z_GIS class columns}

\item{w_x_column_grep}{regex to find gene x fitness columns}

\item{w_x_err_column_grep}{regex to find gene x fitness error columns}

\item{w_y_column_grep}{regex to find gene y fitness columns}

\item{w_y_err_column_grep}{regex to find gene y fitness error columns}

\item{w_xy_column_grep}{regex to find double mutant fitness columns}

\item{w_xy_err_column_grep}{regex to find double mutant fitness error columns}

\item{count_column_grep}{regex to find count columns}

\item{p_val_column_grep}{regex to find p-value columns}
}
\value{
a version of gi_data with data from multiple barcodes combined for each gene
}
\description{
Combine data from multiple barcodes for each gene
}

