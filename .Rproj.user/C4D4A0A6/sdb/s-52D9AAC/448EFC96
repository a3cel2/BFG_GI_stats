{
    "collab_server" : "",
    "contents" : "pos_cut <- 0.05#0.089#0.146\nneg_cut <- 0.05#0.01#-0.079\nlibrary(dplyr)\n\n#this.dir <- dirname(parent.frame(2)$ofile)\n#setwd(this.dir)\n#setwd('../data')\n\n\n#gi_data <-\n#  read.table('table_s1_new.tsv', head = T, stringsAsFactors = F)\ngi_data <-\n  dplyr::filter(gi_data, Remove_by_Chromosomal_distance_or_SameGene == 'no', C_ij.HetDipl > 100)\n\nshu_complex <- c('CSM2','PSY3','SHU2','SHU1')\n\n\n\ngi_data$gene1 <- sapply(gi_data$Barcode_i, function(x) {\n    strsplit(x, split = '_')[[1]][1]\n  })\n\ngi_data$gene2 <- sapply(gi_data$Barcode_j, function(x) {\n  strsplit(x, split = '_')[[1]][1]\n})\n\n\n\n\ngi_data$Pair <- sapply(1:length(gi_data$gene1),function(i){\n  paste(sort(c(gi_data$gene1[i],gi_data$gene2[i])),collapse='_')\n})\n#gi_data$Barcode_j <- gene2\n\n\n#gi_data <- gi_data %>% group_by(Pair) %>% select(c(1,2,grep('^GIS', colnames(gi_data)))) %>% summarize_each(funs(mean))\n\n#stop()\n\nshu_data <- filter(gi_data, gene1 %in% shu_complex & gene2 %in% shu_complex)\nshu_data <- shu_data %>% group_by(Pair) %>% dplyr::select(grep('^FDR.Int', colnames(shu_data))) %>% summarize_each(funs(mean))\npositive_conditions_shu <- apply(shu_data[,grep('^FDR.Int', colnames(shu_data))],1,function(x){names(which(x > pos_cut))})\nnames(positive_conditions_shu) <- shu_data$Pair\n\nmag1_data <-\n  dplyr::filter(\n    gi_data,\n    gene1 %in% c(shu_complex, 'SLX4') &\n      gene2 == 'MAG1' |\n      gene2 %in% c(shu_complex, 'SLX4') & gene1 == 'MAG1'\n  )\nmag1_data <-\n  mag1_data %>% dplyr::group_by(Pair) %>% dplyr::select(grep('^FDR.Int', colnames(gi_data))) %>% summarize_each(funs(mean))\nnegative_conditions_mag1 <-\n  apply(mag1_data[, grep('^FDR.Int', colnames(mag1_data))], 1, function(x) {\n    names(which(x < neg_cut))\n  })\nnames(negative_conditions_mag1) <- mag1_data$Pair\n\nslx4_data <-\n  filter(\n    gi_data,\n    gene1 %in% c(shu_complex, 'MAG1') &\n      gene2 == 'SLX4' |\n      gene2 %in% c(shu_complex, 'MAG1') & gene1 == 'SLX4'\n  )\nslx4_data <-\n  slx4_data %>% group_by(Pair) %>% dplyr::select(grep('^FDR.Int', colnames(gi_data))) %>% summarize_each(funs(mean))\nnegative_conditions_slx4 <-\n  apply(slx4_data[, grep('^FDR.Int', colnames(slx4_data))], 1, function(x) {\n    names(which(x < neg_cut))\n  })\nnames(negative_conditions_slx4) <- slx4_data$Pair\n\n#mag1_data <- filter(gi_data, gene1 %in% shu_complex & gene2 == 'MAG1' | )\n\n\n",
    "created" : 1508197000123.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3449866507",
    "id" : "448EFC96",
    "lastKnownWriteTime" : 1508804408,
    "last_content_update" : 1508804408449,
    "path" : "~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/analyze_shu_gis.R",
    "project_path" : "scripts/scratch/analyze_shu_gis.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}