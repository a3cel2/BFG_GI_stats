#       lines(pos_cutoff[pos_cutoff > 0],(pos_precision*100)[pos_cutoff > 0],lwd=1,col='red')
#       lines(-neg_cutoff[neg_cutoff > 0],(neg_precision*100)[neg_cutoff > 0],lwd=1,col='red')
#     }
#   }
#
# }
precision_vs_stonge(gi_data,fdr_cutoff = 0.05,xlims=c(-10,10))
precision_vs_stonge(gi_data,fdr_cutoff = 0.05,metr='mat',xlims=c(-2,2),ylab = "Matthew's Correlation Coefficient")
precision_vs_stonge(gi_data,fdr_cutoff = 0.05,metr='mat',xlims=c(-10,10),ylab = "Matthew's Correlation Coefficient")
precision_vs_stonge(gi_data,fdr_cutoff = 0.05,metr='mat',xlims=c(-5,5),ylab = "Matthew's Correlation Coefficient")
precision_vs_stonge(gi_data,fdr_cutoff = 0.05,metr='mat',xlims=c(-20,20),ylab = "Matthew's Correlation Coefficient")
abline(v=5)
abline(v=-5)
precision_vs_stonge(gi_data,fdr_cutoff = 0.05,metr='prec',xlims=c(-20,20),ylab = "Matthew's Correlation Coefficient")
abline(v=-5)
abline(v=-5)
abline(v=5)
abline(h=70)
abline(v=6)
abline(v=7)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
gi_data <- update_calls(gi_data,fdr_cutoff = 1e-05)
head(gi_data)
grep('^Z.*Class',colnames(gi_data))
apply(gi_data[,grep('^Z.*Class',colnames(gi_data))],2,table)
head(gi_data[,grep('^Z.*Class',colnames(gi_data))])
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
apply(gi_data[,grep('^Z.*Class',colnames(gi_data))],2,table)
?update_calls
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
?update_calls
apply(gi_data[,grep('^Z.*Class',colnames(gi_data))],2,table)
gi_data <-
dplyr::filter(gi_data, Remove_by_Chromosomal_distance_or_SameGene == 'no')
apply(gi_data[,grep('^Z.*Class',colnames(gi_data))],2,table)
apply(gi_data[,grep('^Z.*Class',colnames(gi_data))[1:2]],2,table)
able(gi_data[,grep('^Z.*Class',colnames(gi_data))[1:2]])
table(gi_data[,grep('^Z.*Class',colnames(gi_data))[1:2]])
shu_complex <- c('CSM2','PSY3','SHU2','SHU1')
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/analyze_shu_gis.R', echo=TRUE)
shu_data
shu_data <- shu_data %>% group_by(Pair) %>% dplyr::select(grep('^FDR.Int', colnames(shu_data))) %>% summarize_all(funs(p_combine))
mag1_data <-
dplyr::filter(
gi_data,
gene1 %in% c(shu_complex, 'SLX4') &
gene2 == 'MAG1' |
gene2 %in% c(shu_complex, 'SLX4') & gene1 == 'MAG1'
)
mag1_data
slx4_data <-
filter(
gi_data,
gene1 %in% c(shu_complex, 'MAG1') &
gene2 == 'SLX4' |
gene2 %in% c(shu_complex, 'MAG1') & gene1 == 'SLX4'
)
slx4_data
mag1_data
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/analyze_shu_gis.R', echo=TRUE)
shu_data
mag1_data <-
dplyr::filter(
gi_data,
gene1 %in% c(shu_complex, 'SLX4') &
gene2 == 'MAG1' |
gene2 %in% c(shu_complex, 'SLX4') & gene1 == 'MAG1'
)
mag1_data
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/analyze_shu_gis.R', echo=TRUE)
shu_data
mag1_data <-
dplyr::filter(
gi_data,
gene1 %in% c(shu_complex, 'SLX4') &
gene2 == 'MAG1' |
gene2 %in% c(shu_complex, 'SLX4') & gene1 == 'MAG1'
)
mag1_data
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/st_onge_performance_matrix.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/st_onge_performance_matrix.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/st_onge_performance_matrix.R', echo=TRUE)
p <- plot_ly(z = ~positive_matrix) %>% add_surface()
p
heatmap(negative_matrix,Rowv=NA,Colv=NA,scale='none',main=paste(c(condition,'neg'),collapse = ' '))
heatmap(positive_matrix,Rowv=NA,Colv=NA,scale='none',main=paste(c(condition,'neg'),collapse = ' '))
metr
metr <- 'mat'
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/st_onge_performance_matrix.R', echo=TRUE)
heatmap(positive_matrix,Rowv=NA,Colv=NA,scale='none',main=paste(c(condition,'neg'),collapse = ' '))
dev.off()
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/st_onge_performance_matrix.R', echo=TRUE)
positive_matrix[1:10,1:10]
max(positive_matrix)
max(positive_matrix,na.rm=T)
which(positive_matrix > 0.6308)
which(positive_matrix > 0.6308,arr.ind=T)
positive_matrix[,24]
positive_matrix[,24,drop=F]
condition
condition <- control_name
gi_data_filtered <-
dplyr::filter(gi_data,
SOJ_Class_NoMMS %in% c('NEUTRAL', 'AGGRAVATING', 'ALLEVIATING'))
fdr_column <- paste(c(fdr_prefix,condition),collapse='.')
z_column <- paste(c(z_prefix,condition),collapse='.')
gi_column <- paste(c(gi_prefix,condition),collapse='.')
labels_pos <-
gi_data_filtered[, st_onge_class] == 'ALLEVIATING'
labels_neg <-
gi_data_filtered[, st_onge_class] == 'AGGRAVATING'
for(i in 1:length(gi_cutoff_vec)){
for(j in 1:length(log_fdr_cutoff_vec)){
gi_cutoff <- gi_cutoff_vec[i]
fdr_cutoff <- log_fdr_cutoff_vec[j]
scores_cond_pos <- as.numeric(gi_data_filtered[,gi_column] >= gi_cutoff & -log10(gi_data_filtered[,fdr_column]) >= fdr_cutoff)
scores_cond_neg <- as.numeric(gi_data_filtered[,gi_column] <= -gi_cutoff & -log10(gi_data_filtered[,fdr_column]) >= fdr_cutoff)
pos_perf <- ROCR::performance(ROCR::prediction(scores_cond_pos, labels_pos), 'mat')@y.values[[1]][2]
neg_perf <- ROCR::performance(ROCR::prediction(scores_cond_neg, labels_neg), 'mat')@y.values[[1]][2]
positive_matrix[i,j] <- pos_perf
negative_matrix[i,j] <- neg_perf
}
}
rownames(positive_matrix) <- gi_cutoff_vec
rownames(negative_matrix) <- -gi_cutoff_vec
colnames(positive_matrix) <- log_fdr_cutoff_vec
colnames(negative_matrix) <- log_fdr_cutoff_vec
which(positive_matrix > 0.6308,arr.ind=T)
max(positive_matrix)
max(positive_matrix,na.rm=T)
which(positive_matrix > 0.55,arr.ind=T)
max(negative_matrix,na.rm=T)
negative_matrix
gi_cutoff
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/st_onge_performance_matrix.R', echo=TRUE)
negative_matrix[1:10,1:10]
condition
max(negative_matrix)
negative_matrix[1:10,1:20]
negative_matrix[1:10,1:30]
negative_matrix[1:10,1:40]
negative_matrix[1:10,1:35]
negative_matrix[1:10,1:33]
negative_matrix[1:10,1:32]
negative_matrix[1:10,1:31]
negative_matrix[1:10,1:32]
negative_matrix[1:10,1:31]
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/st_onge_performance_matrix.R', echo=TRUE)
negative_matrix[1:10,1:31]
max(negative_matrix)
which(negative_matrix >= max(negative_matrix),arr.ind = T)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/st_onge_performance_matrix.R', echo=TRUE)
which(negative_matrix >= max(negative_matrix),arr.ind = T)
which(positive_matrix >= max(positive_matrix),arr.ind = T)
which(positive_matrix >= max(positive_matrix,na.rm=T),arr.ind = T)
heatmap(negative_matrix,Rowv=NA,Colv=NA,scale='none',main=paste(c(condition,'neg'),collapse = ' '))
melt(negative_matrix)
dplyr::melt(negative_matrix)
p <- plot_ly(z = ~negative_matrix) %>% add_surface()
p
head(negative_matrix)
gi_cutoff
fdr_cutoff
negative_matrix[,'0']
negative_matrix[,'2']
log_fdr_cutoff_vec
negative_matrix
negative_matrix_mms <- negative_matrix
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/st_onge_performance_matrix.R', echo=TRUE)
negative_matrix_mms <- negative_matrix
negative_matrix_no_mms <- negative_matrix
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/st_onge_performance_matrix.R', echo=TRUE)
negative_matrix_mms <- negative_matrix
negative_matrix_mms + negative_matrix_no_mms
(negative_matrix_mms + negative_matrix_no_mms)/2
negative_matrix_avg <- (negative_matrix_mms + negative_matrix_no_mms)/2
max(negative_matrix_avg)
which(negative_matrix_avg >= max(negative_matrix_avg))
which(negative_matrix_avg >= max(negative_matrix_avg),arr.ind=T)
colnames(negative_matrix_avg)
colnames(negative_matrix_avg)[32]
head(negative_matrix_avg)
10^-6.2
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/st_onge_performance_matrix.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/st_onge_performance_matrix.R', echo=TRUE)
positive_matrix_no_mms <-positive_matrix
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/st_onge_performance_matrix.R', echo=TRUE)
positive_matrix_mms <-positive_matrix
positive_matrix_avg <- (positive_matrix_mms + positive_matrix_no_mms)/2
max(positive_matrix_avg)
max(positive_matrix_avg,na.rm=)
max(positive_matrix_avg,na.rm=T)
which(positive_matrix_avg >= max(positive_matrix_avg,na.rm=T))
which(positive_matrix_avg >= max(positive_matrix_avg,na.rm=T),arr.ind=T)
colnames(positive_matrix_avg)[24]
negative_matrix_avg[1,]
which(negative_matrix_avg >= max(negative_matrix_avg),arr.ind=T)
max(negative_matrix_avg)
10^-6.2
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/analyze_shu_gis.R', echo=TRUE)
mag1_data <-
dplyr::filter(
gi_data,
gene1 %in% c(shu_complex, 'SLX4') &
gene2 == 'MAG1' |
gene2 %in% c(shu_complex, 'SLX4') & gene1 == 'MAG1'
)
mag1_data
which(negative_matrix_avg >= max(negative_matrix_avg),arr.ind=T)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/st_onge_performance_matrix.R', echo=TRUE)
neg_avg <- (neg_list[[1]] + neg_list[[2]])/2
neg_list
neg_list[[1]]
neg_list[[2]]
names(neg_list)
head(neg_list)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/st_onge_performance_matrix.R', echo=TRUE)
neg_avg <- (neg_list[[1]] + neg_list[[2]])/2
max(neg_avg)
which(neg_avg >= max(neg_avg))
which(neg_avg >= max(neg_avg),arr.ind=T)
shu_data
mag1_data
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/st_onge_performance_matrix.R', echo=TRUE)
neg_avg <- (neg_list[[1]] + neg_list[[2]])/2
which(neg_avg >= max(neg_avg),arr.ind=T)
neg_avg
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/st_onge_performance_matrix.R', echo=TRUE)
neg_avg <- (neg_list[[1]] + neg_list[[2]])/2
which(neg_avg >= max(neg_avg),arr.ind=T)
p <- plot_ly(z = ~neg_avg) %>% add_surface()
p
head(neg_avg)
plot(neg_avg[,1])
plot(neg_avg[1,])
colnames(neg_avg)
rownames(neg_avg)
plot(neg_avg[,1])
rownames(neg_avg)
colnames(neg_avg)
plot(neg_avg[1,])
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/st_onge_performance_matrix.R', echo=TRUE)
plot(neg_avg[1,])
colnames(neg_avg[40])
colnames(neg_avg)[40]
which(neg_avg >= max(neg_avg),arr.ind=T)
p <- plot_ly(z = ~neg_avg) %>% add_surface()
p
p <- plot_ly(z = ~pos_avg) %>% add_surface()
p
which(pos_avg >= max(pos_avg),arr.ind=T)
plot(pos_avg[1,])
head(pos_avg)
which.max(pos_avg[1,])
which.max(pos_avg[,1])
max(pos_avg[,1])
which.max(pos_avg[,1])
pos_avg[,1]
pos_avg[,1][36]
which.max(pos_avg[,1])
which.max(pos_avg[1,])
which.max(neg_avg[,1])
which.max(neg_avg[1,])
mag1_data
slx4_data <-
filter(
gi_data,
gene1 %in% c(shu_complex, 'MAG1') &
gene2 == 'SLX4' |
gene2 %in% c(shu_complex, 'MAG1') & gene1 == 'SLX4'
)
slx4_data
neg_avg[1:5,1:5]
neg_avg[1,]
which.max(neg_avg[1,])
which.max(pos_avg[1,])
which.max(neg_avg[1,])
mag1_data
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
precision_vs_stonge(gi_data,fdr_cutoff = 0.05,metr='mat',xlims=c(-10,10),ylab = "Matthew's Correlation Coefficient")
precision_vs_stonge(gi_data,fdr_cutoff = 0.05,metr='mat',xlims=c(-20,20),ylab = "Matthew's Correlation Coefficient")
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
mag1_data <-
mag1_data %>% dplyr::group_by(Pair) %>% dplyr::select(grep('^FDR.Int', colnames(gi_data))) %>% summarize_all(funs(p_combine))
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/analyze_shu_gis.R', echo=TRUE)
mag1_
mag1_d
mag1_data <-
dplyr::filter(
gi_data,
gene1 %in% c(shu_complex, 'SLX4') &
gene2 == 'MAG1' |
gene2 %in% c(shu_complex, 'SLX4') & gene1 == 'MAG1'
)
mag1_data
control_name = "NoDrug"
condition_name = "MMS"
fdr_prefix = "FDR.Internal_ij"
z_prefix = "Z_GIS_ij"
gi_prefix = "GIS_ij"
fdr_cutoff = 0.05
metr = 'prec'
xlims = c(-5,5)
xlab = 'Z_GI'
ylab = 'St.Onge Validation Rate (%)'
#Joint performance
labels_pos <- c()
labels_neg <- c()
scores_cond <- c()
for (condition in c(control_name, condition_name)) {
fdr_column <- paste(c(fdr_prefix, condition), collapse = '.')
z_column <- paste(c(z_prefix, condition), collapse = '.')
gi_column <- paste(c(gi_prefix, condition), collapse = '.')
labels_pos <-
rbind(labels_pos,gi_data_filtered[, st_onge_class] == 'ALLEVIATING')
labels_neg <-
rbind(labels_neg,gi_data_filtered[, st_onge_class] == 'AGGRAVATING')
scores_cond <-
c(scores_cond,
sign(gi_data_filtered[, z_column]) * -log10(as.numeric(gi_data_filtered[, fdr_column])))
}
gi_data_filtered <-
dplyr::filter(gi_data,
SOJ_Class_NoMMS %in% c('NEUTRAL', 'AGGRAVATING', 'ALLEVIATING'))
#Joint performance
labels_pos <- c()
labels_neg <- c()
scores_cond <- c()
for (condition in c(control_name, condition_name)) {
fdr_column <- paste(c(fdr_prefix, condition), collapse = '.')
z_column <- paste(c(z_prefix, condition), collapse = '.')
gi_column <- paste(c(gi_prefix, condition), collapse = '.')
labels_pos <-
rbind(labels_pos,gi_data_filtered[, st_onge_class] == 'ALLEVIATING')
labels_neg <-
rbind(labels_neg,gi_data_filtered[, st_onge_class] == 'AGGRAVATING')
scores_cond <-
c(scores_cond,
sign(gi_data_filtered[, z_column]) * -log10(as.numeric(gi_data_filtered[, fdr_column])))
}
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
optim_cutoffs
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
plot(rnorm(100))
dev.off()
plot(rnorm(100))
plot(rnorm(100),xlab= expression('-Log10(q'['neutral']))
plot(rnorm(100),xlab= expression('-Log10(q'['neutral']*')'))
plot(rnorm(100),xlab= expression('-Log'[10]*(q'['neutral']*')'))
plot(rnorm(100),xlab= expression('-Log'[10]*'(q'['neutral']*')'))
optim_cutoffs
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
optim_cutoffs
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
precision_vs_stonge(gi_data,fdr_cutoff = 0.05,xlims=c(-10,10),cutoffs_drawn = optim_cutoffs)
abline(h=90)
abline(h=91)
abline(h=92)
abline(h=75)
optim_vals
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/analyze_shu_gis.R', echo=TRUE)
shu_data
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
gi_data <- update_calls(gi_data,fdr_cutoff_neg = 10^-optim_cutoffs[1], fdr_cutoff_pos = 10^-optim_cutoffs[2])
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/analyze_shu_gis.R', echo=TRUE)
shu_data
mag1_data <-
dplyr::filter(
gi_data,
gene1 %in% c(shu_complex, 'SLX4') &
gene2 == 'MAG1' |
gene2 %in% c(shu_complex, 'SLX4') & gene1 == 'MAG1'
)
mag1_data
slx4_data <-
filter(
gi_data,
gene1 %in% c(shu_complex, 'MAG1') &
gene2 == 'SLX4' |
gene2 %in% c(shu_complex, 'MAG1') & gene1 == 'SLX4'
)
slx4_data
grep('^Z_*.Class',colnames(gi_data),val=T)
grep('^Z_.*Class',colnames(gi_data),val=T)
apply(gi_data[,grep('^Z_.*Class',colnames(gi_data),val=T)],2,table)
table(gi_data[,grep('^Z_.*Class',colnames(gi_data),val=T)[1:2]])
head(gi_data)
differential_calls <- differential_gi_analysis(gi_data,
#Report significant
fdr_cutoff = 0.05,
delta_gi_cutoff = 0,
require_sign_change = T)
head(differential_calls)
head(gi_data)
gi_data$Z_GIS_ij.HYDX_Class == 'NEUTRAL' & Z_GIS_ij.NoDrug_Class
gi_data$Z_GIS_ij.HYDX_Class == 'NEUTRAL' & gi_data$Z_GIS_ij.NoDrug_Class
gi_data$Z_GIS_ij.HYDX_Class == 'NEUTRAL' & gi_data$Z_GIS_ij.NoDrug_Class == 'NEUTRAL'
head(gi_data)
nn_data <- gi_data[gi_data$Z_GIS_ij.HYDX_Class == 'NEUTRAL' & gi_data$Z_GIS_ij.NoDrug_Class == 'NEUTRAL',]
hist(nn_data$Z_GIS_ij.HYDX - nn_data$gi_data$Z_GIS_ij)
hist(nn_data$Z_GIS_ij.HYDX - nn_data$gi_data$Z_GIS_ij.NoDrug)
nn_data$Z_GIS_ij.HYDX - nn_data$gi_data$Z_GIS_ij.NoDrug
nn_data$Z_GIS_ij.HYDX
nn_data$Z_GIS_ij.HYDX - nn_data$Z_GIS_ij.NoDrug
hist(nn_data$Z_GIS_ij.HYDX - nn_data$Z_GIS_ij.NoDrug)
hist(nn_data$Z_GIS_ij.HYDX - nn_data$Z_GIS_ij.NoDrug,breaks=100)
nn_pairs
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
differential_calls <- differential_gi_analysis(gi_data,
#Report significant
fdr_cutoff = 0.05,
delta_gi_cutoff = 0,
require_sign_change = T)
head(differential_calls)
differential_calls %>% group_by(Condition1,Condition2) %>% summarize(n())
as.data.frame(differential_calls %>% group_by(Condition1,Condition2) %>% summarize(n()))
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
differential_calls <- differential_gi_analysis(averaged_gi_data,
#Report everything
fdr_cutoff = 1.5,
require_sign_change = F)
differential_calls <- differential_gi_analysis(gi_data,
#Report everything
fdr_cutoff = 1.5,
require_sign_change = F)
head(differential_calls)
filter(differential_calls,Condition1 == 'NoDrug' & Condition2 == 'DMSO')$DeltaZ_FDR
hist(filter(differential_calls,Condition1 == 'NoDrug' & Condition2 == 'DMSO')$DeltaZ_FDR)
hist(filter(differential_calls,Condition1 == 'NoDrug' & Condition2 == 'DMSO')$DeltaZ_FDR,breaks=100)
head(differential_calls)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/packages/BfgGiStats/R/differential_gi_calls.R', echo=TRUE)
differential_calls <- differential_gi_analysis(averaged_gi_data,
#Report everything
fdr_cutoff = 1.5,
require_sign_change = F)
differential_calls <- differential_gi_analysis(gi_data,
#Report everything
fdr_cutoff = 1.5,
require_sign_change = F)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/packages/BfgGiStats/R/differential_gi_calls.R', echo=TRUE)
differential_calls <- differential_gi_analysis(gi_data,
#Report everything
fdr_cutoff = 1.5,
require_sign_change = F)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/packages/BfgGiStats/R/differential_gi_calls.R', echo=TRUE)
differential_calls <- differential_gi_analysis(gi_data,
#Report everything
fdr_cutoff = 1.5,
require_sign_change = F)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/packages/BfgGiStats/R/differential_gi_calls.R', echo=TRUE)
differential_calls <- differential_gi_analysis(gi_data,
#Report everything
fdr_cutoff = 1.5,
require_sign_change = F)
?hist
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/packages/BfgGiStats/R/differential_gi_calls.R', echo=TRUE)
differential_calls <- differential_gi_analysis(gi_data,
#Report everything
fdr_cutoff = 1.5,
require_sign_change = F)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/packages/BfgGiStats/R/differential_gi_calls.R', echo=TRUE)
differential_calls <- differential_gi_analysis(gi_data,
#Report everything
fdr_cutoff = 1.5,
require_sign_change = F)
differential_calls <- differential_gi_analysis(gi_data,
#Report significant
fdr_cutoff = 0.05,
delta_gi_cutoff = 0,
require_sign_change = T)
head(differential_calls)
hist(differential_calls$DeltaZ_FDR)
hist(differential_calls$DeltaZ_FDR,breaks=100)
as.data.frame(differential_calls %>% group_by(Condition1,Condition2) %>%> summarize(n()))
as.data.frame(differential_calls %>% group_by(Condition1,Condition2) %>% summarize(n()))
head(gi_data)
grep('^Z_GIS.*Class',colnames(gi_data))
apply(gi_data[,grep('^Z_GIS.*Class',colnames(gi_data))],2,table()
)
apply(gi_data[,grep('^Z_GIS.*Class',colnames(gi_data))],2,table)
head(differential_calls)
setwd(this.dir)
setwd('../data')
differential_calls <- differential_gi_analysis(gi_data,
#Report significant
fdr_cutoff = 0.05,
delta_gi_cutoff = 0,
require_sign_change = T)
write.table(differential_calls,row.names=F,quote=F,sep='\t',file='table_s2_significant.tsv')
differential_calls %>% group_by(Condition1,Condition2) %>% summarize(n())
as.data.frame(differential_calls %>% group_by(Condition1,Condition2) %>% summarize(n()))
head(differential_calls)
head(differential_calls,n=100)
hist(differential_calls$DeltaGI)
hist(differential_calls$DeltaGI,breaks=100)
abline(v=0.1)
abline(v=-0.1)
