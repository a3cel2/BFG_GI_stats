gi_cutoff_neg = -0.07,
metr = 'rec'
)
abline(h=60)
abline(h=55)
abline(h=56)
st_onge_scatterplot(gi_data)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
colnames(gi_data)[1:10]
filtdat <- filter(gi_data, Remove_by_Chromosomal_distance_or_SameGene == 'no')
table(filtdat$Z_GIS_xy.4NQO_Class)
table(filtdat$Z_GIS_xy.MMS_Class)
table(filtdat$Z_GIS_xy.NoDrug_Class)
table(filtdat$Z_GIS_xy.MMS_Class)
table(filtdat$Z_GIS_xy.DMSO_Class)
table(filtdat$Z_GIS_xy.DMSO_Class,filtdat$Z_GIS_xy.DMSO_Class)
table(filtdat$Z_GIS_xy.NoDrug_Class,filtdat$Z_GIS_xy.DMSO_Class)
table(filtdat$Z_GIS_xy.DMSO_Class)
plot(filtdat$GIS_xy.NoDrug,filtdat$GIS_xy.DMSO)
cor(filtdat$GIS_xy.NoDrug,filtdat$GIS_xy.DMSO)
cor(filtdat$Z_GIS_xy.NoDrug,filtdat$Z_GIS_xy.DMSO)
plot(filtdat$Z_GIS_xy.NoDrug,filtdat$Z_GIS_xy.DMSO)
dim(differential_calls_sig)
dim(differential_calls_sig_no_sign)
1965/2492
differential_calls_sig <- differential_gi_analysis(
gi_data,
fdr_cutoff = 0.01,
delta_gi_cutoff = 0,#.1,
require_sign_change = T
)
dim(differential_calls_sig)
differential_calls_sig <- differential_gi_analysis(
gi_data,
fdr_cutoff = 0.01,
delta_gi_cutoff = 0.1,
require_sign_change = T
)
head(differential_calls_sig)
differential_calls_sig %>% group_by(Condiiton1,Condition2) %>% summarize(n())
differential_calls_sig %>% group_by(Condition1,Condition2) %>% summarize(n())
as.data.frame(differential_calls_sig %>% group_by(Condition1,Condition2) %>% summarize(n()))
head(differential_calls_sig)
hist(differential_calls_sig$DeltaGI)
hist(differential_calls_sig$DeltaGI,breaks=100)
reversal_count
sort(reversal_count
)
sort(reversal_count)
sort(differential_count)
head(differential_calls_sig)
filter(differential_calls_sig,Gene_x == 'RAD5' | Gene_y == 'RAD5')
filter(gi_data,Gene_x == 'RAD5' | Gene_y == 'RAD5')
filter(filtdat,Gene_x == 'RAD5' | Gene_y == 'RAD5')
filter(filtdat,Gene_x == 'RAD5'  Gene_y %in% c('MUS81', 'MMS5', 'RAD51', 'RAD54', 'RAD55'))
filter(filtdat,Gene_x == 'RAD5'  Gene_y %in% c('MUS81', 'MMS5', 'RAD51', 'RAD54', 'RAD55'))
filter(filtdat,Gene_x == 'RAD5',Gene_y %in% c('MUS81', 'MMS5', 'RAD51', 'RAD54', 'RAD55'))
filter(filtdat,Gene_y == 'RAD5',Gene_x %in% c('MUS81', 'MMS5', 'RAD51', 'RAD54', 'RAD55'))
filter(filtdat,Gene_x == 'RAD5',Gene_y %in% c('MUS81', 'MMS4', 'RAD51', 'RAD54', 'RAD55'))
filter(filtdat,Gene_y == 'RAD5',Gene_x %in% c('MUS81', 'MMS4', 'RAD51', 'RAD54', 'RAD55'))
gene = 'RAD5'
dplyr::filter(differential_calls_sig, Gene_x == gene |
Gene_y == gene, Class_Condition1 != "Expected", Class_Condition2 != "Expected")
ey <- dplyr::filter(differential_calls_sig, Gene_x == gene |
Gene_y == gene, Class_Condition1 != "Expected", Class_Condition2 != "Expected")
interset <- c('MUS81', 'MMS4', 'RAD51', 'RAD54', 'RAD55')
head(interset)
filter(ey,Gene_x %in% interset)
filter(ey,Gene_x %in% interset | Gene_y %in% interset)
dim(filter(ey,Gene_x %in% interset | Gene_y %in% interset))
differential_calls_sig <- differential_gi_analysis(
gi_data,
fdr_cutoff = 0.01,
delta_gi_cutoff = 0,
require_sign_change = T
)
hist(differential_calls_sig$DeltaGI)
hist(differential_calls_sig$DeltaGI,breaks=100)
hist(differential_calls_sig$DeltaGI,breaks=1000)
abline(h=0.1)
abline(v=0.1,col='red')
abline(v=-0.1,col='red')
interset2 <- c('MMS4','MUS81','SLX4')
filter(filtdat,Gene_x == 'SGS1', Gene_y %in% interset2)
filter(filtdat,Gene_y == 'SGS1', Gene_x %in% interset2)
filter(filtdat,Gene_y == '', Gene_x  == '')
filter(filtdat,Gene_y == 'SRS2', Gene_x  == 'SGS1')
filter(filtdat,Gene_y == 'SRS2', Gene_x  == 'RAD54)
)
``
``
``
;
;
''
''
filter(filtdat,Gene_y == 'SRS2', Gene_x  == 'RAD54')
filter(filtdat,Gene_y == 'SRS2', Gene_x  == 'RAD5')
filter(filtdat,Gene_y == 'SGS1', Gene_x  == 'RAD5')
dim(differential_calls_sig)
differential_calls_sig <- differential_gi_analysis(
gi_data,
fdr_cutoff = 0.01,
delta_gi_cutoff = 0.1,
require_sign_change = T
)
dim(differential_calls_sig)
dim(differential_calls)
1965/25884
filter(differential_calls_sig, Gene_x == 'MUS81', Gene_y == 'RAD5')
dim(differential_calls_sig)
reversed_calls <- filter(differential_calls_sig, Class_Condition1 != "Expected", Class_Condition2 != "Expected")
dim(reversed_calls)
105/1965
differential_calls_sig %>% group_by(Condition1, Condition2) %>% summarize(n())
as.data.frame(differential_calls_sig %>% group_by(Condition1, Condition2) %>% summarize(n()))
ey <- as.data.frame(differential_calls_sig %>% group_by(Condition1, Condition2) %>% summarize(n()))
filter(ey,Condition1 %in% c('NoDrug','DMSO'))
filter(ey,Condition1 %in% c('NoDrug','DMSO') | Condition2 %in% c('NoDrug','DMSO'))
cuck <- filter(ey,Condition1 %in% c('NoDrug','DMSO') | Condition2 %in% c('NoDrug','DMSO'))
sort(cuck$`n()`)
sort(cuck$`n()`,index.return=T)
sort(cuck$`n()`,index.return=T)$ix
cuck[sort(cuck$`n()`,index.return=T)$ix,]
ey[sort(ey$`n()`,index.return=T)$ix,]
head(new_gis)
cbind(new_gis,rep('R1',nrow(new_gis)))
new_gis <- cbind(new_gis,rep(to_analyze[i],nrow(new_gis)))
colnames(new_gis)[ncol(new_gis)] <- 'Sample'
new_gis <- new_gis[1:2,ncol(new_gis),3:(ncol(new_gis) - 1)]
head(new_gis)
new_gis <- update_gis(gi_data,
#These values are empirically determined and have to be
#in the same order as in gi_data count columns
g_wt_vec = doubling_vec[[to_analyze[i]]])
new_gis <- cbind(new_gis,rep(to_analyze[i],nrow(new_gis)))
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
head(gi_data)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
head(gi_data)
head(gi_data[,-c('P.neutral_xy.4NQO')])
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
head(gi_data)
0.3^10
0.3^8
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
cut = 50
par(mar=c(4,4,3,1))
plot(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl >= cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)), xlim = c(-1.1, 0.5),lwd=2,col='red',xlab='GIS',main='GIS of Same-Same Pairs')
lines(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl < cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)),
col='blue',
lwd='2'
)
legend(-0.1,3,
legend=c(expression(C[xy]>=100),
expression(C[xy]<100)),
col=c('red','blue'),
pch=15)
cut = 10
Z_(〖GIS〗_xy )
par(mar=c(4,4,3,1))
plot(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl >= cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)), xlim = c(-1.1, 0.5),lwd=2,col='red',xlab='GIS',main='GIS of Same-Same Pairs')
lines(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl < cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)),
col='blue',
lwd='2'
)
legend(-0.1,3,
legend=c(expression(C[xy]>=100),
expression(C[xy]<100)),
col=c('red','blue'),
pch=15)
cut = 50
par(mar=c(4,4,3,1))
plot(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl >= cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)), xlim = c(-1.1, 0.5),lwd=2,col='red',xlab='GIS',main='GIS of Same-Same Pairs')
lines(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl < cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)),
col='blue',
lwd='2'
)
legend(-0.1,3,
legend=c(expression(C[xy]>=100),
expression(C[xy]<100)),
col=c('red','blue'),
pch=15)
cut = 100
par(mar=c(4,4,3,1))
plot(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl >= cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)), xlim = c(-1.1, 0.5),lwd=2,col='red',xlab='GIS',main='GIS of Same-Same Pairs')
lines(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl < cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)),
col='blue',
lwd='2'
)
legend(-0.1,3,
legend=c(expression(C[xy]>=100),
expression(C[xy]<100)),
col=c('red','blue'),
pch=15)
par(mar=c(4,4,3,1))
plot(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl >= cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)), xlim = c(-1.1, 0.5),lwd=2,col='red',xlab='GIS',main='GIS of Same-Same Pairs')
lines(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl < cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)),
col='blue',
lwd='2'
)
legend(-0.1,3,
legend=c(expression(C[xy]>=100),
expression(C[xy]<100)),
col=c('red','blue'),
pch=15)
cu = 30
cut = 30
par(mar=c(4,4,3,1))
plot(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl >= cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)), xlim = c(-1.1, 0.5),lwd=2,col='red',xlab='GIS',main='GIS of Same-Same Pairs')
lines(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl < cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)),
col='blue',
lwd='2'
)
legend(-0.1,3,
legend=c(expression(C[xy]>=100),
expression(C[xy]<100)),
col=c('red','blue'),
pch=15)
cut = 10
par(mar=c(4,4,3,1))
plot(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl >= cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)), xlim = c(-1.1, 0.5),lwd=2,col='red',xlab='GIS',main='GIS of Same-Same Pairs')
lines(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl < cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)),
col='blue',
lwd='2'
)
legend(-0.1,3,
legend=c(expression(C[xy]>=100),
expression(C[xy]<100)),
col=c('red','blue'),
pch=15)
cut = 20
par(mar=c(4,4,3,1))
plot(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl >= cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)), xlim = c(-1.1, 0.5),lwd=2,col='red',xlab='GIS',main='GIS of Same-Same Pairs')
lines(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl < cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)),
col='blue',
lwd='2'
)
legend(-0.1,3,
legend=c(expression(C[xy]>=100),
expression(C[xy]<100)),
col=c('red','blue'),
pch=15)
cut = 50
par(mar=c(4,4,3,1))
plot(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl >= cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)), xlim = c(-1.1, 0.5),lwd=2,col='red',xlab='GIS',main='GIS of Same-Same Pairs')
lines(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl < cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)),
col='blue',
lwd='2'
)
legend(-0.1,3,
legend=c(expression(C[xy]>=100),
expression(C[xy]<100)),
col=c('red','blue'),
pch=15)
cut = 1000
par(mar=c(4,4,3,1))
plot(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl >= cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)), xlim = c(-1.1, 0.5),lwd=2,col='red',xlab='GIS',main='GIS of Same-Same Pairs')
lines(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl < cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)),
col='blue',
lwd='2'
)
legend(-0.1,3,
legend=c(expression(C[xy]>=100),
expression(C[xy]<100)),
col=c('red','blue'),
pch=15)
cut = 100
par(mar=c(4,4,3,1))
plot(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl >= cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)), xlim = c(-1.1, 0.5),lwd=2,col='red',xlab='GIS',main='GIS of Same-Same Pairs')
lines(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl < cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)),
col='blue',
lwd='2'
)
legend(-0.1,3,
legend=c(expression(C[xy]>=100),
expression(C[xy]<100)),
col=c('red','blue'),
pch=15)
cut = 50
par(mar=c(4,4,3,1))
plot(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl >= cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)), xlim = c(-1.1, 0.5),lwd=2,col='red',xlab='GIS',main='GIS of Same-Same Pairs')
lines(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl < cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)),
col='blue',
lwd='2'
)
legend(-0.1,3,
legend=c(expression(C[xy]>=100),
expression(C[xy]<100)),
col=c('red','blue'),
pch=15)
cut = 30
par(mar=c(4,4,3,1))
plot(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl >= cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)), xlim = c(-1.1, 0.5),lwd=2,col='red',xlab='GIS',main='GIS of Same-Same Pairs')
lines(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl < cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)),
col='blue',
lwd='2'
)
legend(-0.1,3,
legend=c(expression(C[xy]>=100),
expression(C[xy]<100)),
col=c('red','blue'),
pch=15)
cut
setwd(this.dir)
setwd('../results')
cut = 50
Cairo::CairoPDF(file = 'gis_well_measured_vs_non.pdf',
width = 4,
height = 3.5)
par(mar=c(4,4,3,1))
plot(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl >= cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)), xlim = c(-1.1, 0.5),lwd=2,col='red',xlab='GIS',main='GIS of Same-Same Pairs')
lines(density(as.matrix(
gi_data_old %>% dplyr::filter(C_xy.HetDipl < cut, Chromosomal_distance_bp == 0) %>% dplyr::select(grep('^GIS_xy.', colnames(gi_data_old)))
)),
col='blue',
lwd='2'
)
legend(-0.1,3,
legend=c(expression(C[xy]>=30),
expression(C[xy]<30)),
col=c('red','blue'),
pch=15)
dev.off()
getwd()
setwd(this.dir)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
precision_vs_stonge(
gi_data,
fdr_cutoff = 0.01,
xlims = c(-5, 5),
cutoffs_drawn = c(2,2)
)
abline(h=94,col='green')
abline(h=92,col='green')
abline(h=9-,col='green')
abline(h=90,col='green')
abline(h=75,col='green')
precision_vs_stonge(
gi_data,
fdr_cutoff = 0.01,
meas = 'rec',
xlims = c(-5, 5),
cutoffs_drawn = c(2,2)
)
precision_vs_stonge(
gi_data,
fdr_cutoff = 0.01,
metr = 'rec',
xlims = c(-5, 5),
cutoffs_drawn = c(2,2)
)
abline(h=60)
abline(h=61)
abline(h=62)
abline(h=60,col='green')
abline(h=61)
abline(h=61,col='green')
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/analyze_shu_gis.R', echo=TRUE)
shu_data
mag1_data <-
dplyr::filter(
gi_data,
gene1 %in% c(shu_complex, 'SLX4') &
gene2 == 'MAG1' |
gene2 %in% c(shu_complex, 'SLX4') & gene1 == 'MAG1'
)
mag1_data
slx4_data <-
filter(
gi_data,
gene1 %in% c(shu_complex, 'MAG1') &
gene2 == 'SLX4' |
gene2 %in% c(shu_complex, 'MAG1') & gene1 == 'SLX4'
)
slx4_data
table(gi_data$Z_GIS_xy.4NQO_Class)
table(gi_data$Z_GIS_xy.MMS_Class)
table(gi_data$Z_GIS_xy.NoDrug_Class)
table(gi_data$Z_GIS_xy.DMSO_Class)
plot(gi_data$GIS_xy.DMSO,gi_data$GIS_xy.NoDrug)
cor(gi_data$GIS_xy.DMSO,gi_data$GIS_xy.NoDrug)
cor(gi_data$GIS_xy.DMSO,gi_data$GIS_xy.NoDrug)^2
cor(gi_data$GIS_xy.DMSO,gi_data$GIS_xy.NoDrug)
cor(gi_data$Z_GIS_xy.DMSO,gi_data$Z_GIS_xy.NoDrug)
plot(gi_data$Z_GIS_xy.DMSO,gi_data$Z_GIS_xy.NoDrug)
abline(c(0,1))
plot(gi_data$Z_GIS_xy.DMSO,gi_data$Z_GIS_xy.MMS)
plot(gi_data$GIS_xy.DMSO,gi_data$GIS_xy.MMS)
abline(c(0,1))
cor(gi_data$GIS_xy.DMSO,gi_data$GIS_xy.MMS)
cor(gi_data$GIS_xy.DMSO,gi_data$GIS_xy.NoDrug)
cor(gi_data$GIS_xy.DMSO,gi_data$GIS_xy.MMS)
cor(gi_data$GIS_xy.4NQO,gi_data$GIS_xy.MMS)
plot(gi_data$GIS_xy.4NQO,gi_data$GIS_xy.MMS)
abline(c(0,1))
plot(gi_data$Z_GIS_xy.4NQO,gi_data$Z_GIS_xy.MMS)
plot(gi_data$GIS_xy.DMSO,gi_data$GIS_xy.BLMC)
plot(gi_data$GIS_xy.ZEOC,gi_data$GIS_xy.BLMC)
cor(gi_data$GIS_xy.ZEOC,gi_data$GIS_xy.BLMC)
cor(gi_data$GIS_xy.ZEOC,gi_data$GIS_xy.MMS)
cor(gi_data$GIS_xy.ZEOC,gi_data$GIS_xy.DMSO)
grep('^GIS',colnames(gi_data))
filtdat <- filter(gi_data,remove())
head(gi_data)
filtdat <- filter(gi_data,Remove_by_Chromosomal_distance_or_SameGene == 'no')
head(filtdat[,grep('^GIS',colnames(gi_data))])
cor(filtdat[,grep('^GIS',colnames(gi_data))])
as.dist(cor(filtdat[,grep('^GIS',colnames(gi_data))]))
hclust(as.dist(cor(filtdat[,grep('^GIS',colnames(gi_data))])))
plot(hclust(as.dist(cor(filtdat[,grep('^GIS',colnames(gi_data))]))))
hclust(as.dist(cor(filtdat[,grep('^GIS',colnames(gi_data))])^2))
hclust(as.dist(1 - cor(filtdat[,grep('^GIS',colnames(gi_data))])^2))
plot(hclust(as.dist(1 - cor(filtdat[,grep('^GIS',colnames(gi_data))])^2)))
plot(hclust(as.dist(1 - cor(filtdat[,grep('^Z_GIS',colnames(gi_data))])^2)))
head(filtdat)
plot(hclust(as.dist(1 - cor(filtdat[,grep('^Z_GIS',colnames(gi_data))])^2)))
plot(hclust(as.dist(1 - cor(filtdat[,grep('^GIS',colnames(gi_data))])^2)))
?hclust
plot(hclust(as.dist(1 - cor(filtdat[,grep('^GIS',colnames(gi_data))])^2)),method='average')
plot(hclust(as.dist(1 - cor(filtdat[,grep('^GIS',colnames(gi_data))])^2),method='average'))
plot(hclust(as.dist(1 - cor(filtdat[,grep('^GIS',colnames(gi_data))])^2),method='complete'))
plot(hclust(as.dist(1 - cor(filtdat[,grep('^GIS',colnames(gi_data))])^2),method='average'))
plot(hclust(as.dist(1 - cor(filtdat[,grep('^GIS',colnames(gi_data))])^2),method='centroid'))
cor(filtdat[,grep('^GIS',colnames(gi_data))])^2
cor(filtdat[,grep('^GIS',colnames(gi_data))])
cor(filtdat[,grep('^GIS',colnames(gi_data))])[,1]
cor(filtdat[,grep('^GIS',colnames(gi_data))])[3,]
cor(filtdat[,grep('^GIS',colnames(gi_data))])[6,]
grep('^Z_GIS',colnames(gi_data))
grep('^Z_GIS',colnames(gi_data),val = T)
grep('_Class',grep('^Z_GIS',colnames(gi_data),val = T))
grep('_Class',grep('^Z_GIS',colnames(gi_data),val = T),invert=T,val=TRUE)
z_cols <- grep('_Class',grep('^Z_GIS',colnames(gi_data),val = T),invert=T,val=TRUE)
cor(filtdat[,grep(z_cols,colnames(gi_data))])[6,]
z_cols
cor(filtdat[,z_cols])[6,]
cor(filtdat[,z_cols])
cor(filtdat[,z_cols])^2
as.dist(1 - cor(filtdat[,z_cols])^2)
plot(hclust(as.dist(1 - cor(filtdat[,z_cols])^2)))
plot(hclust(as.dist(1 - cor(gi_data[,z_cols])^2)))
dim(filtdat)
dim(gi_data)
gi_data
gi_data$Remove_by_Chromosomal_distance_or_SameGene
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/master.R', echo=TRUE)
dim(differential_calls_sig)
dim(differential_calls_sig_no_sign)
2050/2569
sort(reversal_count)
sort(differential_count)
source('~/Dropbox/Roth Lab/projects/BFG_GI_stats/scripts/scratch/analyze_shu_gis.R', echo=TRUE)
shu_data
